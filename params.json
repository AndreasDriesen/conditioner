{"name":"Conditioner","tagline":"JavaScript Conditioner framework","body":"JavaScript Conditioner Framework\r\n================================\r\n\r\nAttention\r\n--------------------------------\r\n\r\nThis is currently a work in progress\r\n\r\n\r\nIntroduction\r\n--------------------------------\r\n\r\nConditioner is a JavaScript framework to help you decouple your JavaScript UI classes from your HTML and allows you to only initialize them under on certain conditions (which is a good thing).\r\n\r\nIn short it allows you to do the following:\r\nLoad the UI Map Class the moment the supplied media query `(min-width:30em)` is met.\r\n\r\n```html\r\n<div data-behavior=\"IMap\" data-conditions='{\"media\":\"(min-width:30em)\"}'>\r\n    IMap is currently inactive\r\n</div>\r\n```\r\n\r\n```javascript\r\n// get instance of conditioner\r\nvar myConditioner = Conditioner.getInstance();\r\n\r\n// register ui.Map Class to be used for IMap behavior reference\r\nmyConditioner.registerDependencies(\r\n    {\r\n        'id':'IMap',\r\n        'uri':'ui.Map'\r\n    }\r\n);\r\n\r\n// apply behavior to document\r\nmyConditioner.applyBehavior(document);\r\n```\r\n\r\n\r\nWhy should I use this\r\n--------------------------------\r\n\r\nMost UI Classes should not be concerned with the conditions under which they are allowed to be active.\r\n\r\nFor instance you might have a Map Class which generates a detailed map based on the current geolocation. Maybe, because the map takes up a lot of space, on a small screen you would rather show a url to a map service instead. The moment you add all the screen size tests to the Map Class the Map Class becomes a lot less flexible.\r\n\r\nBy separating the conditions under which the Map Class becomes active you can reuse the Class under various circumstances without altering it's code.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}